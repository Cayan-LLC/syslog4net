<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <system.diagnostics>
    <sharedListeners>
      <!--
        EventProviderTraceListener (ETW)
        
        This listener doesn't write directly to a file but acts as a provider to the Event Tracing
        for Windows (ETW) system.

        To access the traces you need to use an ETW listener, for example the command 
        line logman.exe tool can be used to write traces to a log file.

        To use this, first open PowerShell as Administrator and use logman.exe to start
        a file logging session. You need to use the provider GUID specified in the 
        initializeData of the listener:

          logman start "hellosession" -p `{BDE5930E-34C9-4E2F-A6EC-89E1F1EA69CC`} -o "hello.etl" -ets

        Once the session is started, run the logging program (or the session can attach to an 
        already running program). When finished you can stop the session:

          logman stop "hellosession" -ets

        The session will create the specified .etl file, which is a binary format. To
        convert to a readable text format, use the tracerpt.exe tool.

          tracerpt hello.etl -o hello.xml

        This will create an XML file (as it is being processed a root wrapper is added),
        containing entries using the Event schema. A header entry is added containing some
        general information, and the events use slighly different fields than 
        EventSchemaTraceListener and some information missing such as the EventID,
        Correlation, and Computer.

        The tracerpt.exe tool can also convert to CSV, but it is still missing information such as
        the Event ID:

          tracerpt hello.etl -of csv -o hello.csv

        It can also convert to .evtx format, which can be opened in the Windows Event Viewer (note
        that it puts the most recent, i.e. last, event at the top), however the same information
        is still missing:

          tracerpt hello.etl -of evtx -o hello.evtx

        The ETL file can also be imported by Service Trace Viewer, and converted to the .svclog
        format, but loses even more details, including the actual message.
          
          & "C:\Program Files (x86)\Microsoft SDKs\Windows\v8.0A\bin\NETFX 4.0 Tools\SvcTraceViewer.exe" hello.xml

        See: http://blogs.msdn.com/b/peaceofmind/archive/2008/04/16/using-eventprovidertracelistener.aspx

      -->
      <add name="etw" type="System.Diagnostics.Eventing.EventProviderTraceListener, System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
           initializeData="{BDE5930E-34C9-4E2F-A6EC-89E1F1EA69CC}" />
    </sharedListeners>
    <sources>
      <source name="HelloProgram" switchValue="Information,ActivityTracing">
        <listeners>
          <clear />
          <add name="etw" />
        </listeners>
      </source>
      <source name="HelloWorker" switchValue="All">
        <listeners>
          <clear />
          <add name="etw" />
        </listeners>
      </source>
    </sources>
  </system.diagnostics>
</configuration>
